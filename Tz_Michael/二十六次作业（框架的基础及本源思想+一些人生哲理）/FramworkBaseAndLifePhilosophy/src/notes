oop设计时的本源目的：
多态：设计这个特点的原因是为了方便未来，利用java中的上转型和下转型，抓住父类的声明指向子类的引用，只能调用子类重写父类的方法的特点
	可以在大体上把握未来代码的“方向”
抽象：可以来辅助多态更好的实施，具体表现在，可以强制子类必须重写某些方法，防止意外的发生
继承：为了实现人工智能AI，设计者采用了仿真度更高的单继承，由此带来了一些新的困惑，（当一个事物有多个身份的时候），为了解决这些困惑，
	java引入了接口（Interface）这个概念,变相的实现多继承
	
人要相互帮助即利他，这里隐射出，编码风格的一些注意事项：
1.命名，要见名知意，采用合理的命名方式（驼峰，或者用下划线分割）
2.多加注释

人要对自己负责：
·付出
·反思